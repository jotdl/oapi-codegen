

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router interface {
                             	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
                             	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
                             	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
                             	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
                             	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
                             	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
                             	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
                             	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
                             	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
                             }, si ServerInterface, options ...HandlerOption) {
{{if .}}
    wrapper := ServerInterfaceWrapper{
        Handler: si,
    }
	for _, opt := range options {
		opt(&wrapper)
	}
{{end}}
{{range .}}router.{{.Method}}("{{.Path | swaggerUriToEchoUri}}", wrapper.{{.OperationId}})
{{end}}
}

type HandlerOption func(wrapper *ServerInterfaceWrapper)

func WithSecurity(guard func(ctx echo.Context, provider string, _ []string) error) HandlerOption {
	return func(wrapper *ServerInterfaceWrapper) {
		wrapper.secure = guard
	}
}